<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on </title>
    <link>https://akhalikov.github.io/tags/development/</link>
    <description>Recent content in Development on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 22 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://akhalikov.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to identify all classes that are used in Java application ?</title>
      <link>https://akhalikov.github.io/posts/java-classes/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://akhalikov.github.io/posts/java-classes/</guid>
      <description>Some day a Java programmer might want to know what classes are used in his application. For example, they want to clean up messy enterprise project from classes that are no longer in use, but steel exist in a project.
How to accomplish that ?
Using JVM options Several approaches were described in this Habrahabr article. Most of them are quite complex and project-specific, but one very simple and is worth mentioning.</description>
    </item>
    
  </channel>
</rss>